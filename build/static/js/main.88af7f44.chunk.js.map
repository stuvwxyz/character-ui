{"version":3,"sources":["images/homeImage.png","Auth.js","Navbar.js","Home.js","character/CharacterList.js","character/CharacterDisplay.js","character/CharacterEdit.js","Callback.js","SecuredRoute/SecuredRoute.js","location/LocationDisplay.js","location/LocationList.js","location/LocationEdit.js","organization/OrganizationDisplay.js","organization/OrganizationList.js","organization/OrganizationEdit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","auth0Client","Auth","Object","classCallCheck","this","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","Date","getTime","expiresAt","authorize","_this","Promise","resolve","reject","parseHash","err","authResult","setSession","idTokenPayload","exp","logout","returnTo","_this2","checkSession","withRouter","props","react_default","a","createElement","reactstrap_es","color","light","expand","className","nav","inNavbar","caret","left","tag","Link","to","divider","href","onClick","name","history","replace","Home","Navbar","src","homeImage","alt","fluid","Component","CharacterList","possibleConstructorReturn","getPrototypeOf","call","state","character","isLoading","remove","assertThisInitialized","setState","fetch","then","response","json","data","id","concat","method","headers","Accept","Content-Type","updatedCharacter","toConsumableArray","_this3","filter","i","_this4","_this$state","characterList","map","key","style","whiteSpace","characterName","characterAge","characterGender","characterRace","characterDescription","characterAlive","size","characterId","width","CharacterDisplay","emptyItem","characterPurpose","characterBackground","characterNotes","item","handleChange","handleSubmit","match","params","group","event","target","value","objectSpread","preventDefault","console","log","body","JSON","stringify","push","title","onSubmit","for","type","autoComplete","characterRelations","CharacterEdit","onChange","Callback","SecuredRoute","component","path","checkingSession","Route","render","LocationDisplay","locationId","locationName","locationLocation","locationTerrain","locationNotes","LocationList","location","updatedLocation","locationList","LocationEdit","OrganizationDisplay","organizationId","organizationName","organizationNotes","organizationPurpose","OrganizationList","organization","updatedOrganization","organizationList","OrganizationEdit","App","pathname","silentAuth","forceUpdate","_context","t0","error","BrowserRouter","Switch","exact","SecuredRoute_SecuredRoute","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88af7f44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homeImage.d65a8552.png\";","import auth0 from 'auth0-js';\n\nclass Auth {\n    constructor() {\n        this.auth0 = new auth0.WebAuth({\n            // the following three lines MUST be updated\n            domain: 'gordianknots.auth0.com',\n            audience: 'https://gordianknots.auth0.com/userinfo',\n            clientID: 'm01zl0fyCE1DcHpYjN0EzX8F0Ezj684g',\n            redirectUri: 'https://gamenite-dev.herokuapp.com/callback',\n            responseType: 'id_token',\n            scope: 'openid profile'\n        });\n\n        this.getProfile = this.getProfile.bind(this);\n        this.handleAuthentication = this.handleAuthentication.bind(this);\n        this.isAuthenticated = this.isAuthenticated.bind(this);\n        this.signIn = this.signIn.bind(this);\n        this.signOut = this.signOut.bind(this);\n    }\n\n    getProfile() {\n        return this.profile;\n    }\n\n    getIdToken() {\n        return this.idToken;\n    }\n\n    isAuthenticated() {\n        return new Date().getTime() < this.expiresAt;\n    }\n\n    signIn() {\n        this.auth0.authorize();\n    }\n\n    handleAuthentication() {\n        return new Promise((resolve, reject) => {\n            this.auth0.parseHash((err, authResult) => {\n                if (err) return reject(err);\n                if (!authResult || !authResult.idToken) {\n                    return reject(err);\n                }\n                this.setSession(authResult);\n                resolve();\n            });\n        })\n    }\n\n    setSession(authResult) {\n        this.idToken = authResult.idToken;\n        this.profile = authResult.idTokenPayload;\n        // set the time that the id token will expire at\n        this.expiresAt = authResult.idTokenPayload.exp * 1000;\n    }\n\n    signOut() {\n        this.auth0.logout({\n            returnTo: 'https://gamenite-dev.herokuapp.com',\n            clientID: 'm01zl0fyCE1DcHpYjN0EzX8F0Ezj684g',\n        });\n    }\n\n    silentAuth() {\n        return new Promise((resolve, reject) => {\n            this.auth0.checkSession({}, (err, authResult) => {\n                if (err) return reject(err);\n                this.setSession(authResult);\n                resolve();\n            });\n        });\n    }\n}\n\n\nconst auth0Client = new Auth();\n\nexport default auth0Client;\n","import React, { Component } from 'react';\nimport { Collapse,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from './Auth';\n\nfunction NavBar(props) {\n    const signOut = () => {\n        auth0Client.signOut();\n        props.history.replace('/');\n    };\n\n    return (\n        <Navbar color=\"faded\" light expand=\"md\">\n            <Nav className=\"navbar navbar-dark bg-dark fixed-top\">\n                <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                        Menu\n                    </DropdownToggle>\n                    <DropdownMenu left>\n                        <DropdownItem tag={Link} to=\"/\">\n                            Home\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem tag={Link} to=\"/character\">\n                            Manage Characters\n                        </DropdownItem>\n                        <DropdownItem tag={Link} to=\"/location\">\n                            Manage Locations\n                        </DropdownItem>\n                        <DropdownItem tag={Link} to=\"/organization\">\n                            Manage Organizations\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem divider />\n                        <DropdownItem tag=\"a\" href=\"https://github.com/stuvwxyz/character-ui\">\n                            GitHub UI\n                        </DropdownItem>\n                        <DropdownItem tag=\"a\" href=\"https://github.com/stuvwxyz/character-api\">\n                            GitHub API\n                        </DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledDropdown>\n                {\n                    !auth0Client.isAuthenticated() &&\n                    <button className=\"btn btn-dark\" onClick={auth0Client.signIn}>Sign In</button>\n                }\n                {\n                    auth0Client.isAuthenticated() &&\n                    <div>\n                        <label className=\"mr-2 text-white\">{auth0Client.getProfile().name}</label>\n                        <button className=\"btn btn-dark\" onClick={() => {signOut()}}>Sign Out</button>\n                    </div>\n                }\n            </Nav>\n        </Navbar>\n    );\n}\n\nexport default withRouter(NavBar);\n","import React, { Component } from 'react';\nimport './App.css';\nimport homeImage from './images/homeImage.png';\nimport Navbar from './Navbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <img src={homeImage} className=\"App-logo\" alt=\"homeImage\" />\n                        <p>\n                            Begin your adventure\n                        </p>\n                        <Container fluid>\n                            <Button color=\"link\"><Link to=\"/character\">Manage Characters</Link></Button>\n                            <Button color=\"link\"><Link to=\"/location\">Manage Locations</Link></Button>\n                            <Button color=\"link\"><Link to=\"/organization\">Manage Organizations</Link></Button>\n                        </Container>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass CharacterList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {character: [], isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch('/api/character')\n            .then(response => response.json())\n            .then(data => this.setState({character: data, isLoading: false}));\n    }\n\n    async remove(id) {\n        await fetch(`/api/character/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedCharacter = [...this.state.character].filter(i => i.id !== id);\n            this.setState({character: updatedCharacter});\n        });\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {character, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const characterList = character.map(character => {\n\n            return <tr key={character.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterName}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterAge}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterGender}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterRace}</td>\n                <td style={{whiteSpace: 'wrap'}}>{character.characterDescription}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterAlive}</td>\n\n                <td>\n                    <ButtonGroup className=\"float-right\">\n                        <Button size=\"sm\" color=\"success\" tag={Link} to={\"/character/\" + character.characterId}>Details</Button>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/characteredit/\" + character.characterId}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(character.characterId)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <Navbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/characteredit/new\">Add Character</Button>\n                    </div>\n                    <h3>Character List</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"15%\">Name</th>\n                            <th width=\"20%\">Age</th>\n                            <th width=\"20%\">Gender</th>\n                            <th width=\"20%\">Race</th>\n                            <th width=\"20%\">Physical Description</th>\n                            <th width=\"20%\">Alive</th>\n                            <th width=\"10%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {characterList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CharacterList);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass CharacterDisplay extends Component {\n\n    emptyItem = {\n        characterId: '',\n        characterName: '',\n        characterAge: '',\n        characterGender: '',\n        characterRace: '',\n        characterDescription: '',\n        characterPurpose: '',\n        characterBackground: '',\n        characterNotes: '',\n        characterAlive: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/character/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state)\n        const {item} = this.state;\n        let id = item.characterId;\n        console.log(id)\n        await fetch(`/api/character/${id}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/character');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{'View Character'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"characterName\">Name</Label>\n                        <Input type=\"text\" name=\"characterName\" id=\"characterName\" value={item.characterName || ''}\n                               autoComplete=\"characterName\"/>\n\n                        <Label for=\"characterAge\">Age</Label>\n                        <Input type=\"text\" name=\"characterAge\" id=\"characterAge\" value={item.characterAge || ''}\n                               autoComplete=\"characterAge\"/>\n\n                        <Label for=\"characterGender\">Gender</Label>\n                        <Input type=\"text\" name=\"characterGender\" id=\"characterGender\" value={item.characterGender || ''}\n                               autoComplete=\"characterGender\"/>\n\n                        <Label for=\"characterRace\">Race</Label>\n                        <Input type=\"text\" name=\"characterRace\" id=\"characterRace\" value={item.characterRace || ''}\n                               autoComplete=\"characterRace\"/>\n\n                        <Label for=\"characterRelations\">Relations (siblings)</Label>\n                        <Input type=\"text\" name=\"characterRelations\" id=\"characterRelations\" value={item.characterRelations || ''}\n                               autoComplete=\"characterRelations\"/>\n\n                        <Label for=\"characterDescription\">Description</Label>\n                        <Input type=\"text\" name=\"characterDescription\" id=\"characterDescription\" value={item.characterDescription || ''}\n                               autoComplete=\"characterDescription\"/>\n\n                        <Label for=\"characterPurpose\">Purpose</Label>\n                        <Input type=\"text\" name=\"characterPurpose\" id=\"characterPurpose\" value={item.characterPurpose || ''}\n                               autoComplete=\"characterPurpose\"/>\n\n                        <Label for=\"characterBackground\">Background</Label>\n                        <Input type=\"text\" name=\"characterBackground\" id=\"characterBackground\" value={item.characterBackground || ''}\n                               autoComplete=\"characterBackground\"/>\n\n                        <Label for=\"characterNotes\">Notes</Label>\n                        <Input type=\"text\" name=\"characterNotes\" id=\"characterNotes\" value={item.characterNotes || ''}\n                               autoComplete=\"characterNotes\"/>\n\n                        <Label for=\"characterAlive\">Alive</Label>\n                        <Input type=\"text\" name=\"characterAlive\" id=\"characterAlive\" value={item.characterAlive || ''}\n                               autoComplete=\"characterAlive \"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"success\" tag={Link} to=\"/character\">Return</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(CharacterDisplay);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass CharacterEdit extends Component {\n\n    emptyItem = {\n        characterId: '',\n        characterName: '',\n        characterAge: '',\n        characterGender: '',\n        characterRace: '',\n        characterDescription: '',\n        characterPurpose: '',\n        characterBackground: '',\n        characterNotes: '',\n        characterAlive: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/character/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n\n        await fetch('/api/character', {\n            method: (item.id) ? 'PUT' : 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/character');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Character' : 'Add Character'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"characterName\">Name</Label>\n                        <Input type=\"text\" name=\"characterName\" id=\"characterName\" value={item.characterName || ''}\n                               onChange={this.handleChange} autoComplete=\"characterName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterAge\">Age</Label>\n                        <Input type=\"text\" name=\"characterAge\" id=\"characterAge\" value={item.characterAge || ''}\n                               onChange={this.handleChange} autoComplete=\"characterAge\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterGender\">Gender</Label>\n                        <Input type=\"text\" name=\"characterGender\" id=\"characterGender\" value={item.characterGender || ''}\n                               onChange={this.handleChange} autoComplete=\"characterGender\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterRace\">Race</Label>\n                        <Input type=\"text\" name=\"characterRace\" id=\"characterRace\" value={item.characterRace || ''}\n                               onChange={this.handleChange} autoComplete=\"characterRace\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterRelations\">Relations (siblings)</Label>\n                        <Input type=\"text\" name=\"characterRelations\" id=\"characterRelations\" value={item.characterRelations || ''}\n                               onChange={this.handleChange} autoComplete=\"characterRelations\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterDescription\">Description</Label>\n                        <Input type=\"text\" name=\"characterDescription\" id=\"characterDescription\" value={item.characterDescription || ''}\n                               onChange={this.handleChange} autoComplete=\"characterDescription\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterPurpose\">Purpose</Label>\n                        <Input type=\"text\" name=\"characterPurpose\" id=\"characterPurpose\" value={item.characterPurpose || ''}\n                               onChange={this.handleChange} autoComplete=\"characterPurpose\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterBackground\">Background</Label>\n                        <Input type=\"text\" name=\"characterBackground\" id=\"characterBackground\" value={item.characterBackground || ''}\n                               onChange={this.handleChange} autoComplete=\"characterBackground\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterNotes\">Notes</Label>\n                        <Input type=\"text\" name=\"characterNotes\" id=\"characterNotes\" value={item.characterNotes || ''}\n                               onChange={this.handleChange} autoComplete=\"characterNotes\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterAlive\">Alive</Label>\n                        <Input type=\"text\" name=\"characterAlive\" id=\"characterAlive\" value={item.characterAlive || ''}\n                               onChange={this.handleChange} autoComplete=\"characterAlive\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/character\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(CharacterEdit);\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport auth0Client from './Auth';\n\nclass Callback extends Component {\n    async componentDidMount() {\n        await auth0Client.handleAuthentication();\n        this.props.history.replace('/');\n    }\n\n    render() {\n        return (\n            <p>Loading profile...</p>\n        );\n    }\n}\n\nexport default withRouter(Callback);\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nfunction SecuredRoute(props) {\n    const {component: Component, path, checkingSession} = props;\n    return (\n        <Route path={path} render={() => {\n            if (checkingSession) return <h3 className=\"text-center\">Validating session...</h3>;\n            if (!auth0Client.isAuthenticated()) {\n                auth0Client.signIn();\n                return <div></div>;\n            }\n            return <Component />\n        }} />\n    );\n}\n\nexport default SecuredRoute;\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass LocationDisplay extends Component {\n\n    emptyItem = {\n        locationId: '',\n        locationName: '',\n        locationLocation: '',\n        locationTerrain: '',\n        locationNotes: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/location/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state)\n        const {item} = this.state;\n        let id = item.locationId;\n        console.log(id)\n        await fetch(`/api/location/${id}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/location');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{'View Location'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"locationName\">Name</Label>\n                        <Input type=\"text\" name=\"locationName\" id=\"locationName\" value={item.locationName || ''}\n                               autoComplete=\"locationName\"/>\n\n                        <Label for=\"locationLocation\">Where is it Located?</Label>\n                        <Input type=\"text\" name=\"locationLocation\" id=\"locationLocation\" value={item.locationLocation || ''}\n                               autoComplete=\"locationLocation\"/>\n\n                        <Label for=\"locationTerrain\">Terrain</Label>\n                        <Input type=\"text\" name=\"locationTerrain\" id=\"locationTerrain\" value={item.locationTerrain || ''}\n                               autoComplete=\"locationTerrain\"/>\n\n                        <Label for=\"locationNotes\">Notes</Label>\n                        <Input type=\"text\" name=\"locationNotes\" id=\"locationNotes\" value={item.locationNotes || ''}\n                               autoComplete=\"locationNotes\"/>\n\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"success\" tag={Link} to=\"/location\">Return</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(LocationDisplay);\n","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass LocationList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {location: [], isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch('/api/location')\n            .then(response => response.json())\n            .then(data => this.setState({location: data, isLoading: false}));\n    }\n\n    async remove(id) {\n        await fetch(`/api/location/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedLocation = [...this.state.location].filter(i => i.id !== id);\n            this.setState({location: updatedLocation});\n        });\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {location, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const locationList = location.map(location => {\n\n            return <tr key={location.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{location.locationName}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{location.locationLocation}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{location.locationTerrain}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{location.locationNotes}</td>\n\n                <td>\n                    <ButtonGroup className=\"float-right\">\n                        <Button size=\"sm\" color=\"success\" tag={Link} to={\"/location/\" + location.locationId}>Details</Button>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/locationedit/\" + location.locationId}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(location.locationId)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <Navbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/locationedit/new\">Add Location</Button>\n                    </div>\n                    <h3>Location List</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"15%\">Name</th>\n                            <th width=\"25%\">Where is it located?</th>\n                            <th width=\"30%\">Terrain</th>\n                            <th width=\"30%\">Notes</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {locationList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(LocationList);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass LocationEdit extends Component {\n\n    emptyItem = {\n        locationId: '',\n        locationName: '',\n        locationLocation: '',\n        locationTerrain: '',\n        locationNotes: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/location/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n\n        await fetch('/api/location', {\n            method: (item.id) ? 'PUT' : 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/location');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Location' : 'Add Location'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"locationName\">Name</Label>\n                        <Input type=\"text\" name=\"locationName\" id=\"locationName\" value={item.locationName || ''}\n                               onChange={this.handleChange} autoComplete=\"locationName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"locationLocation\">Whrere is it located?</Label>\n                        <Input type=\"text\" name=\"locationLocation\" id=\"locationLocation\" value={item.locationLocation || ''}\n                               onChange={this.handleChange} autoComplete=\"locationLocation\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"locationTerrain\">Terrain</Label>\n                        <Input type=\"text\" name=\"locationTerrain\" id=\"locationTerrain\" value={item.locationTerrain || ''}\n                               onChange={this.handleChange} autoComplete=\"locationTerrain\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"locationNotes\">Notes</Label>\n                        <Input type=\"text\" name=\"locationNotes\" id=\"locationNotes\" value={item.locationNotes || ''}\n                               onChange={this.handleChange} autoComplete=\"locationNotes\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/location\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(LocationEdit);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass OrganizationDisplay extends Component {\n\n    emptyItem = {\n        organizationId: '',\n        organizationName: '',\n        organizationNotes: '',\n        organizationPurpose: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/organization/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state)\n        const {item} = this.state;\n        let id = item.organizationId;\n        console.log(id)\n        await fetch(`/api/organization/${id}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/organization');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{'View Organization'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"organizationName\">Name</Label>\n                        <Input type=\"text\" name=\"organizationName\" id=\"organizationName\" value={item.organizationName || ''}\n                               autoComplete=\"organizationName\"/>\n\n                        <Label for=\"organizationNotes\">Notes</Label>\n                        <Input type=\"text\" name=\"organizationNotes\" id=\"organizationNotes\" value={item.organizationNotes || ''}\n                               autoComplete=\"organizationNotes\"/>\n\n                        <Label for=\"organizationPurpose\">Gender</Label>\n                        <Input type=\"text\" name=\"organizationPurpose\" id=\"organizationPurpose\" value={item.organizationPurpose || ''}\n                               autoComplete=\"organizationPurpose\"/>\n\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"success\" tag={Link} to=\"/organization\">Return</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(OrganizationDisplay);\n","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass OrganizationList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {organization: [], isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch('/api/organization')\n            .then(response => response.json())\n            .then(data => this.setState({organization: data, isLoading: false}));\n    }\n\n    async remove(id) {\n        await fetch(`/api/organization/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedOrganization = [...this.state.organization].filter(i => i.id !== id);\n            this.setState({organization: updatedOrganization});\n        });\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {organization, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const organizationList = organization.map(organization => {\n\n            return <tr key={organization.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{organization.organizationName}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{organization.organizationNotes}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{organization.organizationPurpose}</td>\n\n                <td>\n                    <ButtonGroup className=\"float-right\">\n                        <Button size=\"sm\" color=\"success\" tag={Link} to={\"/organization/\" + organization.organizationId}>Details</Button>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/organizationedit/\" + organization.organizationId}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(organization.organizationId)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <Navbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/organizationedit/new\">Add Organization</Button>\n                    </div>\n                    <h3>Organization List</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"15%\">Organization</th>\n                            <th width=\"20%\">Notes</th>\n                            <th width=\"20%\">Purpose</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {organizationList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(OrganizationList);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass OrganizationEdit extends Component {\n\n    emptyItem = {\n        organizationId: '',\n        organizationName: '',\n        organizationNotes: '',\n        organizationPurpose: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/organization/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n\n        await fetch('/api/organization', {\n            method: (item.id) ? 'PUT' : 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/organization');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Organization' : 'Add Organization'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"organizationName\">Name</Label>\n                        <Input type=\"text\" name=\"organizationName\" id=\"organizationName\" value={item.organizationName || ''}\n                               onChange={this.handleChange} autoComplete=\"organizationName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"organizationNotes\">Notes</Label>\n                        <Input type=\"text\" name=\"organizationNotes\" id=\"organizationNotes\" value={item.organizationNotes || ''}\n                               onChange={this.handleChange} autoComplete=\"organizationNotes\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"organizationPurpose\">Purpose</Label>\n                        <Input type=\"text\" name=\"organizationPurpose\" id=\"organizationPurpose\" value={item.organizationPurpose || ''}\n                               onChange={this.handleChange} autoComplete=\"organizationPurpose\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/organization\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(OrganizationEdit);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport CharacterList from './character/CharacterList';\nimport CharacterDisplay from \"./character/CharacterDisplay\";\nimport CharacterEdit from \"./character/CharacterEdit\";\nimport Callback from './Callback';\nimport SecuredRoute from './SecuredRoute/SecuredRoute';\nimport auth0Client from './Auth';\nimport LocationDisplay from \"./location/LocationDisplay\";\nimport LocationList from \"./location/LocationList\";\nimport LocationEdit from \"./location/LocationEdit\";\nimport OrganizationDisplay from \"./organization/OrganizationDisplay\";\nimport OrganizationList from \"./organization/OrganizationList\";\nimport OrganizationEdit from \"./organization/OrganizationEdit\";\n\nclass App extends Component {\n    async componentDidMount() {\n        if (this.props.location.pathname === '/callback') return;\n        try {\n            await auth0Client.silentAuth();\n            this.forceUpdate();\n        } catch (err) {\n            if (err.error !== 'login_required') console.log(err.error);\n        }\n    }\n\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/' exact={true} component={Home}/>\n\n            <SecuredRoute path='/character/:id' component={CharacterDisplay}/>\n            <SecuredRoute path='/character' component={CharacterList} />\n            <SecuredRoute path='/characteredit/:id' component={CharacterEdit}/>\n\n              <SecuredRoute path='/location/:id' component={LocationDisplay}/>\n              <SecuredRoute path='/location' component={LocationList} />\n              <SecuredRoute path='/locationedit/:id' component={LocationEdit}/>\n\n              <SecuredRoute path='/organization/:id' component={OrganizationDisplay}/>\n              <SecuredRoute path='/organization' component={OrganizationList} />\n              <SecuredRoute path='/organizationedit/:id' component={OrganizationEdit}/>\n\n            <Route exact path='/callback' component={Callback}/>\n\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}