{"version":3,"sources":["images/homeImage.png","Auth.js","Navbar.js","Home.js","character/CharacterList.js","character/CharacterDisplay.js","character/CharacterEdit.js","Callback.js","SecuredRoute/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","auth0Client","Auth","Object","classCallCheck","this","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","Date","getTime","expiresAt","authorize","_this","Promise","resolve","reject","parseHash","err","authResult","idTokenPayload","exp","withRouter","props","react_default","a","createElement","className","reactstrap_es","nav","inNavbar","caret","left","tag","Link","to","divider","href","onClick","name","history","replace","Home","Navbar","src","homeImage","alt","fluid","color","Component","CharacterList","possibleConstructorReturn","getPrototypeOf","call","state","character","isLoading","remove","assertThisInitialized","_this2","setState","fetch","then","response","json","data","id","concat","method","headers","Accept","Content-Type","updatedCharacter","toConsumableArray","_this3","filter","i","_this4","_this$state","characterList","map","key","style","whiteSpace","characterName","characterAge","characterGender","characterRace","characterDescription","characterAlive","size","characterId","width","CharacterDisplay","emptyItem","characterPurpose","characterBackground","characterNotes","item","handleChange","handleSubmit","match","params","group","event","target","value","objectSpread","preventDefault","console","log","body","JSON","stringify","push","title","onSubmit","for","type","autoComplete","CharacterEdit","onChange","Callback","SecuredRoute","component","path","Route","render","App","BrowserRouter","Switch","exact","SecuredRoute_SecuredRoute","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74b5691f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homeImage.d65a8552.png\";","import auth0 from 'auth0-js';\n\nclass Auth {\n    constructor() {\n        this.auth0 = new auth0.WebAuth({\n            // the following three lines MUST be updated\n            domain: 'gordianknots.auth0.com',\n            audience: 'https://gordianknots.auth0.com/userinfo',\n            clientID: 'xttiqiRrvR8maE7DT603buK6oQzU4Sgd',\n            redirectUri: 'https://ics499-character.herokuapp.com',\n            responseType: 'id_token',\n            scope: 'openid profile'\n        });\n\n        this.getProfile = this.getProfile.bind(this);\n        this.handleAuthentication = this.handleAuthentication.bind(this);\n        this.isAuthenticated = this.isAuthenticated.bind(this);\n        this.signIn = this.signIn.bind(this);\n        this.signOut = this.signOut.bind(this);\n    }\n\n    getProfile() {\n        return this.profile;\n    }\n\n    getIdToken() {\n        return this.idToken;\n    }\n\n    isAuthenticated() {\n        return new Date().getTime() < this.expiresAt;\n    }\n\n    signIn() {\n        this.auth0.authorize();\n    }\n\n    handleAuthentication() {\n        return new Promise((resolve, reject) => {\n            this.auth0.parseHash((err, authResult) => {\n                if (err) return reject(err);\n                if (!authResult || !authResult.idToken) {\n                    return reject(err);\n                }\n                this.idToken = authResult.idToken;\n                this.profile = authResult.idTokenPayload;\n                // set the time that the id token will expire at\n                this.expiresAt = authResult.idTokenPayload.exp * 1000;\n                resolve();\n            });\n        })\n    }\n\n    signOut() {\n        // clear id token, profile, and expiration\n        this.idToken = null;\n        this.profile = null;\n        this.expiresAt = null;\n    }\n}\n\nconst auth0Client = new Auth();\n\nexport default auth0Client;\n","import React, { Component } from 'react';\nimport { Collapse,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from './Auth';\n\nfunction NavBar(props) {\n    const signOut = () => {\n        auth0Client.signOut();\n        props.history.replace('/');\n    };\n\n    return (\n        <nav className=\"navbar navbar-dark bg-dark fixed-top\">\n            <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                    Menu\n                </DropdownToggle>\n                <DropdownMenu left>\n                    <DropdownItem tag={Link} to=\"/\">\n                        Home\n                    </DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem tag={Link} to=\"/character\">\n                        Manage Characters\n                    </DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem divider />\n                    <DropdownItem tag=\"a\" href=\"https://github.com/stuvwxyz/character-ui\">\n                        GitHub UI\n                    </DropdownItem>\n                    <DropdownItem tag=\"a\" href=\"https://github.com/stuvwxyz/character-api\">\n                        GitHub API\n                    </DropdownItem>\n                </DropdownMenu>\n            </UncontrolledDropdown>\n            {\n                !auth0Client.isAuthenticated() &&\n                <button className=\"btn btn-dark\" onClick={auth0Client.signIn}>Sign In</button>\n            }\n            {\n                auth0Client.isAuthenticated() &&\n                <div>\n                    <label className=\"mr-2 text-white\">{auth0Client.getProfile().name}</label>\n                    <button className=\"btn btn-dark\" onClick={() => {signOut()}}>Sign Out</button>\n                </div>\n            }\n        </nav>\n    );\n}\n\nexport default withRouter(NavBar);\n","import React, { Component } from 'react';\nimport './App.css';\nimport homeImage from './images/homeImage.png';\nimport Navbar from './Navbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <img src={homeImage} className=\"App-logo\" alt=\"homeImage\" />\n                        <p>\n                            Begin your adventure\n                        </p>\n                        <Container fluid>\n                            <Button color=\"link\"><Link to=\"/character\">Manage Characters</Link></Button>\n                        </Container>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass CharacterList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {character: [], isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch('/api/character')\n            .then(response => response.json())\n            .then(data => this.setState({character: data, isLoading: false}));\n    }\n\n    async remove(id) {\n        await fetch(`/api/character/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedCharacter = [...this.state.character].filter(i => i.id !== id);\n            this.setState({character: updatedCharacter});\n        });\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {character, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const characterList = character.map(character => {\n\n            return <tr key={character.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterName}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterAge}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterGender}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterRace}</td>\n                <td style={{whiteSpace: 'wrap'}}>{character.characterDescription}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{character.characterAlive}</td>\n\n                <td>\n                    <ButtonGroup className=\"float-right\">\n                        <Button size=\"sm\" color=\"success\" tag={Link} to={\"/character/\" + character.characterId}>Details</Button>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/characteredit/\" + character.characterId}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(character.characterId)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <Navbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/characteredit/new\">Add Character</Button>\n                    </div>\n                    <h3>Character List</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"15%\">Name</th>\n                            <th width=\"20%\">Age</th>\n                            <th width=\"20%\">Gender</th>\n                            <th width=\"20%\">Race</th>\n                            <th width=\"20%\">Physical Description</th>\n                            <th width=\"20%\">Alive</th>\n                            <th width=\"10%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {characterList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CharacterList);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass CharacterDisplay extends Component {\n\n    emptyItem = {\n        characterId: '',\n        characterName: '',\n        characterAge: '',\n        characterGender: '',\n        characterRace: '',\n        characterDescription: '',\n        characterPurpose: '',\n        characterBackground: '',\n        characterNotes: '',\n        characterAlive: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/character/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state)\n        const {item} = this.state;\n        let id = item.characterId;\n        console.log(id)\n        await fetch(`/api/character/${id}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/character');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{'View Character'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"characterName\">characterName</Label>\n                        <Input type=\"text\" name=\"characterName\" id=\"characterName\" value={item.characterName || ''}\n                               autoComplete=\"characterName\"/>\n\n                        <Label for=\"characterAge\">characterAge</Label>\n                        <Input type=\"text\" name=\"characterAge\" id=\"characterAge\" value={item.characterAge || ''}\n                               autoComplete=\"characterAge\"/>\n\n                        <Label for=\"characterGender\">characterGender</Label>\n                        <Input type=\"text\" name=\"characterGender\" id=\"characterGender\" value={item.characterGender || ''}\n                               autoComplete=\"characterGender\"/>\n\n                        <Label for=\"characterRace\">characterRace</Label>\n                        <Input type=\"text\" name=\"characterRace\" id=\"characterRace\" value={item.characterRace || ''}\n                               autoComplete=\"characterRace\"/>\n\n                        <Label for=\"characterDescription\">characterDescription</Label>\n                        <Input type=\"text\" name=\"characterDescription\" id=\"characterDescription\" value={item.characterDescription || ''}\n                               autoComplete=\"characterDescription\"/>\n\n                        <Label for=\"characterPurpose\">characterPurpose</Label>\n                        <Input type=\"text\" name=\"characterPurpose\" id=\"characterPurpose\" value={item.characterPurpose || ''}\n                               autoComplete=\"characterPurpose\"/>\n\n                        <Label for=\"characterBackground\">characterBackground</Label>\n                        <Input type=\"text\" name=\"characterBackground\" id=\"characterBackground\" value={item.characterBackground || ''}\n                               autoComplete=\"characterBackground\"/>\n\n                        <Label for=\"characterNotes\">characterNotes</Label>\n                        <Input type=\"text\" name=\"characterNotes\" id=\"characterNotes\" value={item.characterNotes || ''}\n                               autoComplete=\"characterNotes\"/>\n\n                        <Label for=\"characterAlive\">characterAlive</Label>\n                        <Input type=\"text\" name=\"characterAlive\" id=\"characterAlive\" value={item.characterAlive || ''}\n                               autoComplete=\"characterAlive \"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"success\" tag={Link} to=\"/character\">Return</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(CharacterDisplay);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from '../Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nclass CharacterEdit extends Component {\n\n    emptyItem = {\n        characterId: '',\n        characterName: '',\n        characterAge: '',\n        characterGender: '',\n        characterRace: '',\n        characterDescription: '',\n        characterPurpose: '',\n        characterBackground: '',\n        characterNotes: '',\n        characterAlive: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/character/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n\n        await fetch('/api/character', {\n            method: (item.id) ? 'PUT' : 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/character');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Character' : 'Add Character'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"characterName\">characterName</Label>\n                        <Input type=\"text\" name=\"characterName\" id=\"characterName\" value={item.characterName || ''}\n                               onChange={this.handleChange} autoComplete=\"characterName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterAge\">characterAge</Label>\n                        <Input type=\"text\" name=\"characterAge\" id=\"characterAge\" value={item.characterAge || ''}\n                               onChange={this.handleChange} autoComplete=\"characterAge\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterGender\">characterGender</Label>\n                        <Input type=\"text\" name=\"characterGender\" id=\"characterGender\" value={item.characterGender || ''}\n                               onChange={this.handleChange} autoComplete=\"characterGender\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterRace\">characterRace</Label>\n                        <Input type=\"text\" name=\"characterRace\" id=\"characterRace\" value={item.characterRace || ''}\n                               onChange={this.handleChange} autoComplete=\"characterRace\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterDescription\">characterDescription</Label>\n                        <Input type=\"text\" name=\"characterDescription\" id=\"characterDescription\" value={item.characterDescription || ''}\n                               onChange={this.handleChange} autoComplete=\"characterDescription\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterPurpose\">characterPurpose</Label>\n                        <Input type=\"text\" name=\"characterPurpose\" id=\"characterPurpose\" value={item.characterPurpose || ''}\n                               onChange={this.handleChange} autoComplete=\"characterPurpose\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterBackground\">characterBackground</Label>\n                        <Input type=\"text\" name=\"characterBackground\" id=\"characterBackground\" value={item.characterBackground || ''}\n                               onChange={this.handleChange} autoComplete=\"characterBackground\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterNotes\">characterNotes</Label>\n                        <Input type=\"text\" name=\"characterNotes\" id=\"characterNotes\" value={item.characterNotes || ''}\n                               onChange={this.handleChange} autoComplete=\"characterNotes\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"characterAlive\">characterAlive</Label>\n                        <Input type=\"text\" name=\"characterAlive\" id=\"characterAlive\" value={item.characterAlive || ''}\n                               onChange={this.handleChange} autoComplete=\"characterAlive\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/character\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(CharacterEdit);\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport auth0Client from './Auth';\n\nclass Callback extends Component {\n    async componentDidMount() {\n        await auth0Client.handleAuthentication();\n        this.props.history.replace('/');\n    }\n\n    render() {\n        return (\n            <p>Loading profile...</p>\n        );\n    }\n}\n\nexport default withRouter(Callback);\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nfunction SecuredRoute(props) {\n    const {component: Component, path} = props;\n    return (\n        <Route path={path} render={() => {\n            if (!auth0Client.isAuthenticated()) {\n                auth0Client.signIn();\n                return <div></div>;\n            }\n            return <Component />\n        }} />\n    );\n}\n\nexport default SecuredRoute;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport CharacterList from './character/CharacterList';\nimport CharacterDisplay from \"./character/CharacterDisplay\";\nimport CharacterEdit from \"./character/CharacterEdit\";\nimport Callback from './Callback';\nimport SecuredRoute from './SecuredRoute/SecuredRoute';\nimport auth0Client from './Auth';\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/' exact={true} component={Home}/>\n\n            <SecuredRoute path='/character' component={CharacterList} />\n            <SecuredRoute path='/character/:id' component={CharacterDisplay}/>\n            <SecuredRoute path='/characteredit/:id' component={CharacterEdit}/>\n\n            <Route exact path='/callback' component={Callback}/>\n\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
